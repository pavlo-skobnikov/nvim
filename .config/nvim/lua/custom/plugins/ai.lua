return {
  {
    'github/copilot.vim',
    event = 'InsertEnter',
  },
  {
    'robitx/gp.nvim',
    dependencies = 'folke/which-key.nvim',
    keys = {
      -- Visual mode mappings.
      {
        '<C-g><C-t>',
        ":<C-u>'<,'>GpChatNew tabnew<Cr>",
        mode = { 'v' },
        nowait = true,
        remap = false,
        desc = 'ChatNew tabnew',
      },
      {
        '<C-g><C-v>',
        ":<C-u>'<,'>GpChatNew vsplit<Cr>",
        mode = { 'v' },
        nowait = true,
        remap = false,
        desc = 'ChatNew vsplit',
      },
      {
        '<C-g><C-x>',
        ":<C-u>'<,'>GpChatNew split<Cr>",
        mode = { 'v' },
        nowait = true,
        remap = false,
        desc = 'ChatNew split',
      },
      {
        '<C-g>a',
        ":<C-u>'<,'>GpAppend<Cr>",
        mode = { 'v' },
        nowait = true,
        remap = false,
        desc = 'Visual Append (after)',
      },
      {
        '<C-g>b',
        ":<C-u>'<,'>GpPrepend<Cr>",
        mode = { 'v' },
        nowait = true,
        remap = false,
        desc = 'Visual Prepend (before)',
      },
      { '<C-g>c', ":<C-u>'<,'>GpChatNew<Cr>", mode = { 'v' }, nowait = true, remap = false, desc = 'Visual Chat New' },
      {
        '<C-g>i',
        ":<C-u>'<,'>GpImplement<Cr>",
        mode = { 'v' },
        nowait = true,
        remap = false,
        desc = 'Implement selection',
      },
      { '<C-g>n', '<Cmd>GpNextAgent<Cr>', mode = { 'v' }, nowait = true, remap = false, desc = 'Next Agent' },
      {
        '<C-g>p',
        ":<C-u>'<,'>GpChatPaste<Cr>",
        mode = { 'v' },
        nowait = true,
        remap = false,
        desc = 'Visual Chat Paste',
      },
      { '<C-g>r', ":<C-u>'<,'>GpRewrite<Cr>", mode = { 'v' }, nowait = true, remap = false, desc = 'Visual Rewrite' },
      { '<C-g>s', '<Cmd>GpStop<Cr>', mode = { 'v' }, nowait = true, remap = false, desc = 'GpStop' },
      {
        '<C-g>t',
        ":<C-u>'<,'>GpChatToggle<Cr>",
        mode = { 'v' },
        nowait = true,
        remap = false,
        desc = 'Visual Toggle Chat',
      },
      { '<C-g>x', ":<C-u>'<,'>GpContext<Cr>", mode = { 'v' }, nowait = true, remap = false, desc = 'Visual GpContext' },
      { '<C-g>ge', ":<C-u>'<,'>GpEnew<Cr>", mode = { 'v' }, nowait = true, remap = false, desc = 'Visual GpEnew' },
      { '<C-g>gn', ":<C-u>'<,'>GpNew<Cr>", mode = { 'v' }, nowait = true, remap = false, desc = 'Visual GpNew' },
      { '<C-g>gp', ":<C-u>'<,'>GpPopup<Cr>", mode = { 'v' }, nowait = true, remap = false, desc = 'Visual Popup' },
      { '<C-g>gt', ":<C-u>'<,'>GpTabnew<Cr>", mode = { 'v' }, nowait = true, remap = false, desc = 'Visual GpTabnew' },
      { '<C-g>gv', ":<C-u>'<,'>GpVnew<Cr>", mode = { 'v' }, nowait = true, remap = false, desc = 'Visual GpVnew' },
      -- Normal mode mappings
      {
        '<C-g><C-t>',
        '<Cmd>GpChatNew tabnew<Cr>',
        mode = { 'n' },
        nowait = true,
        remap = false,
        desc = 'New Chat tabnew',
      },
      {
        '<C-g><C-v>',
        '<Cmd>GpChatNew vsplit<Cr>',
        mode = { 'n' },
        nowait = true,
        remap = false,
        desc = 'New Chat vsplit',
      },
      {
        '<C-g><C-x>',
        '<Cmd>GpChatNew split<Cr>',
        mode = { 'n' },
        nowait = true,
        remap = false,
        desc = 'New Chat split',
      },
      { '<C-g>a', '<Cmd>GpAppend<Cr>', mode = { 'n' }, nowait = true, remap = false, desc = 'Append (after)' },
      { '<C-g>b', '<Cmd>GpPrepend<Cr>', mode = { 'n' }, nowait = true, remap = false, desc = 'Prepend (before)' },
      { '<C-g>c', '<Cmd>GpChatNew<Cr>', mode = { 'n' }, nowait = true, remap = false, desc = 'New Chat' },
      { '<C-g>f', '<Cmd>GpChatFinder<Cr>', mode = { 'n' }, nowait = true, remap = false, desc = 'Chat Finder' },
      { '<C-g>n', '<Cmd>GpNextAgent<Cr>', mode = { 'n' }, nowait = true, remap = false, desc = 'Next Agent' },
      { '<C-g>r', '<Cmd>GpRewrite<Cr>', mode = { 'n' }, nowait = true, remap = false, desc = 'Inline Rewrite' },
      { '<C-g>s', '<Cmd>GpStop<Cr>', mode = { 'n' }, nowait = true, remap = false, desc = 'GpStop' },
      { '<C-g>t', '<Cmd>GpChatToggle<Cr>', mode = { 'n' }, nowait = true, remap = false, desc = 'Toggle Chat' },
      { '<C-g>x', '<Cmd>GpContext<Cr>', mode = { 'n' }, nowait = true, remap = false, desc = 'Toggle GpContext' },
      { '<C-g>ge', '<Cmd>GpEnew<Cr>', mode = { 'n' }, nowait = true, remap = false, desc = 'GpEnew' },
      { '<C-g>gn', '<Cmd>GpNew<Cr>', mode = { 'n' }, nowait = true, remap = false, desc = 'GpNew' },
      { '<C-g>gp', '<Cmd>GpPopup<Cr>', mode = { 'n' }, nowait = true, remap = false, desc = 'Popup' },
      { '<C-g>gt', '<Cmd>GpTabnew<Cr>', mode = { 'n' }, nowait = true, remap = false, desc = 'GpTabnew' },
      { '<C-g>gv', '<Cmd>GpVnew<Cr>', mode = { 'n' }, nowait = true, remap = false, desc = 'GpVnew' },
      -- Insert mode mappings
      {
        '<C-g><C-t>',
        '<Cmd>GpChatNew tabnew<Cr>',
        mode = { 'i' },
        nowait = true,
        remap = false,
        desc = 'New Chat tabnew',
      },
      {
        '<C-g><C-v>',
        '<Cmd>GpChatNew vsplit<Cr>',
        mode = { 'i' },
        nowait = true,
        remap = false,
        desc = 'New Chat vsplit',
      },
      {
        '<C-g><C-x>',
        '<Cmd>GpChatNew split<Cr>',
        mode = { 'i' },
        nowait = true,
        remap = false,
        desc = 'New Chat split',
      },
      { '<C-g>a', '<Cmd>GpAppend<Cr>', mode = { 'i' }, nowait = true, remap = false, desc = 'Append (after)' },
      { '<C-g>b', '<Cmd>GpPrepend<Cr>', mode = { 'i' }, nowait = true, remap = false, desc = 'Prepend (before)' },
      { '<C-g>c', '<Cmd>GpChatNew<Cr>', mode = { 'i' }, nowait = true, remap = false, desc = 'New Chat' },
      { '<C-g>f', '<Cmd>GpChatFinder<Cr>', mode = { 'i' }, nowait = true, remap = false, desc = 'Chat Finder' },
      { '<C-g>n', '<Cmd>GpNextAgent<Cr>', mode = { 'i' }, nowait = true, remap = false, desc = 'Next Agent' },
      { '<C-g>r', '<Cmd>GpRewrite<Cr>', mode = { 'i' }, nowait = true, remap = false, desc = 'Inline Rewrite' },
      { '<C-g>s', '<Cmd>GpStop<Cr>', mode = { 'i' }, nowait = true, remap = false, desc = 'GpStop' },
      { '<C-g>t', '<Cmd>GpChatToggle<Cr>', mode = { 'i' }, nowait = true, remap = false, desc = 'Toggle Chat' },
      { '<C-g>x', '<Cmd>GpContext<Cr>', mode = { 'i' }, nowait = true, remap = false, desc = 'Toggle GpContext' },
      { '<C-g>ge', '<Cmd>GpEnew<Cr>', mode = { 'i' }, nowait = true, remap = false, desc = 'GpEnew' },
      { '<C-g>gn', '<Cmd>GpNew<Cr>', mode = { 'i' }, nowait = true, remap = false, desc = 'GpNew' },
      { '<C-g>gp', '<Cmd>GpPopup<Cr>', mode = { 'i' }, nowait = true, remap = false, desc = 'Popup' },
      { '<C-g>gt', '<Cmd>GpTabnew<Cr>', mode = { 'i' }, nowait = true, remap = false, desc = 'GpTabnew' },
      { '<C-g>gv', '<Cmd>GpVnew<Cr>', mode = { 'i' }, nowait = true, remap = false, desc = 'GpVnew' },
    },
    config = function()
      require('gp').setup({})

      require('which-key').add({
        { '<C-g>g', mode = 'v', group = 'generate into new ..' },
        { '<C-g>g', mode = 'n', group = 'generate into new ..' },
        { '<C-g>g', mode = 'i', group = 'generate into new ..' },
      })
    end,
  },
}
